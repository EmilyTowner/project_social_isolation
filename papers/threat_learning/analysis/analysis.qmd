---
title: "Increased Threat Learning After Social Isolation in Human Adolescents"
subtitle: "Analyses"
author: "E. Towner. K. Thomas, L. Tomova, S-J. Blakemore"
---
# setup

## libraries

```{r setup}
#| warning: false
# load libraries
library(tidyverse)
library(lme4)
library(lmerTest)
library(emmeans)
library(kableExtra)
library(papaja)
library(haven)
library(expss)
library(psych)
library(rcompanion)
library(apa)
library(lm.beta)
library(ggsignif)
library(effectsize)
```

## functions

```{r}
significant <- function(p_num, p_char) {ifelse(p_num < 0.005, paste0('\\textbf{', p_char, '}'), p_char)}
```

## import, tidy, and clean data

```{r import, tidy, clean data}
#| warning: false
# read in data (including state variable responses from hour 3 in isolation)
data <- read.csv('../data/data.csv')
# exclude participants who did not complete all sessions
data <- data %>% filter(participant != 'ISO042', participant != 'ISO030')

# recode variables
data$cue <- ifelse((data$response == 'arousal' | data$response == 'valence') & data$cue == 'csplus', 'csplusnosound', as.character(data$cue)) 
data$cue <- ifelse((data$response== 'arousal' | data$response == 'valence') & data$cue == 'us', 'csplus', as.character(data$cue))

# add a cue_dodge variable for plotting
data <- transform(data, cue_dodge = as.numeric(cue), value_jitter = jitter(value, amount = .1))

# create tidy variable names for plotting
data$session_tidy <- ifelse(data$session == "baseline", "Baseline", ifelse(data$session == "isototal", "ISO Total", ifelse(data$session == "isomedia", "ISO Media", NA)))
data$phase_tidy <- ifelse(data$phase == "acquisition", "Acquisition", ifelse(data$phase == "extinction", "Extinction", ifelse(data$phase == "retention", "Retention", ifelse(data$phase == 'preacquisition', "Pre-acquisition", NA))))
data$phase_tidy <- factor(data$phase_tidy, levels = c("Pre-acquisition", "Acquisition", "Extinction", "Retention"))
data$cue_tidy <- ifelse(data$cue == "csplusnosound", "Threat", ifelse(data$cue == "csminus", "Safety", ifelse(data$cue == "csplus", "Screech", NA)))
data$response_tidy <- ifelse(data$response == "arousal", "Arousal", ifelse(data$response == "valence", "Valence", NA))

# relevel the factors for plotting in correct order
data$phase <- factor(data$phase, levels = c("preacquisition", "acquisition", "extinction", "retention"))
data$cue <- as.factor(data$cue)
data$cue <- factor(data$cue, levels = c("csminus", "csplusnosound", "csplus"))
data$session <- factor(data$session, levels = c("baseline", "isomedia", "isototal"))
data$cue_tidy <- factor(data$cue_tidy, levels = c("Threat", "Safety", "Screech"))

# subset state variable data 
data_state <- dplyr::select(data, participant, session, loneliness, stai_state, boredom, social_craving, mood_positive, mood_negative)
data_state <- unique(data_state)
```

# confirmatory analyses - threat learning

## arousal

```{r}
model <- data %>% filter(response == 'arousal', cue != 'csplus') %>% lmer(formula = value ~ session*cue*phase + (1 | participant), data = .)
model_standardized <- effectsize::standardize_parameters(model, method = "refit")
model_summary <- summary(model)
model_confint <- as.data.frame(confint(model))
model_confint <- slice(model_confint, -(1:2))
colnames(model_confint) <- c('ci_lower', 'ci_upper')
table <- model_summary$coefficients
table <- as.data.frame(table, row.names = F)
colnames(table) <- c('est', 'se', 'df', 't', 'p')
table$est_ci_lower <- model_confint$ci_lower
table$est_ci_upper <- model_confint$ci_upper
table$beta <- model_standardized$Std_Coefficient
table$beta_ci_lower <- model_standardized$CI_low
table$beta_ci_upper <- model_standardized$CI_high
table <- table %>% dplyr::mutate_at(c('est', 'se', 'df','t', 'est_ci_lower', 'est_ci_upper', 'beta', 'beta_ci_lower', 'beta_ci_upper'), ~sprintf('%.2f', .))
table <- table %>% dplyr::mutate_at('p', ~sprintf('%.4f', .))
table <- as.data.frame(lapply(table,as.numeric))
table$Estimate <- paste0(format(table$est),' ', '(', format(table$est_ci_lower), ', ', format(table$est_ci_upper), ')')
table$Beta <- paste0(format(table$beta), ' ', '(', format(table$beta_ci_lower),', ', format(table$beta_ci_upper), ')')
table <- dplyr::select(table, 'Estimate', 'se', 'Beta', 'df', 't', 'p')
colnames(table) <- c('Estimate', 'SE', 'Beta', 'df', 't', 'p')
table$p_print <- printp(table$p)
rownames(table) <- c('Intercept', 'Session (ISO-with-media)', 'Session (ISO-total)', 'Cue (Threat)', 'Phase (Acquisition)', 'Phase (Extinction)', 'Phase (Retention)', 'Session (ISO-with-media) * Cue (Threat)', 'Session (ISO-total) * Cue (Threat)', 'Session (ISO-with-media) * Phase (Acquisition)', 'Session (ISO-total) * Phase (Acquisition)', 'Session (ISO-with-media) * Phase (Extinction)', 'Session (ISO-total) * Phase (Extinction)', 'Session (ISO-with-media) * Phase (Retention)', 'Session (ISO-total) * Phase (Retention)', 'Cue (Threat) * Phase (Acquisition)', 'Cue (Threat) * Phase (Extinction)', 'Cue (Threat) * Phase (Retention)', 'Session (ISO-with-media) * Cue (Threat) * Phase (Acquisition)', 'Session (ISO-total) * Cue (Threat) * Phase (Acquisition)', 'Session (ISO-with-media) * Cue (Threat) * Phase (Extinction)', 'Session (ISO-total) * Cue (Threat) * Phase (Extinction)', 'Session (ISO-with-media) * Cue (Threat) * Phase (Retention)', 'Session (ISO-total) * Cue (Threat) * Phase (Retention)')
table$p_print <- significant(table$p, table$p_print)
table <- dplyr::select(table, -p)
table <- dplyr::rename(table, p = p_print)

# export to latex
# kable(table, escape = F, booktabs = T, 'latex') %>% kable_styling(latex_options = c("scale_down")) %>% save_kable('table.tex')
```


